{"ast":null,"code":"var _jsxFileName = \"/app/components/GameInput/GameInput.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { increaseScore } from '../../redux/actions/gameActions';\nimport { useCurrentWordSelector } from '../../redux/reducers/game';\nconst INPUT_VALUE_DEFAULT = 'Start typing...';\n\nconst GameInput = () => {\n  const dispatch = useDispatch();\n  const currenWord = useCurrentWordSelector();\n  const {\n    0: inputWord,\n    1: setInputWord\n  } = useState();\n\n  const clearInput = () => {\n    setInputWord('');\n  };\n\n  const handleChange = value => {\n    setInputWord(value);\n    const isValueSameCurrentWord = currenWord === value;\n\n    if (!isValueSameCurrentWord) {\n      return;\n    }\n\n    clearInput();\n    dispatch(increaseScore());\n  };\n\n  return __jsx(GameInputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Input, {\n    id: \"outlined-secondary\",\n    type: \"text\",\n    placeholder: INPUT_VALUE_DEFAULT,\n    name: \"wordInput\",\n    autoFocus: true,\n    variant: \"outlined\",\n    onChange: event => handleChange(event.target.value),\n    value: inputWord,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst GameInputWrapper = styled.div.withConfig({\n  displayName: \"GameInput__GameInputWrapper\",\n  componentId: \"ti0q1s-0\"\n})([\"display:flex;align-items:center;justify-content:center;\"]);\nexport default GameInput;","map":{"version":3,"sources":["/app/components/GameInput/GameInput.js"],"names":["React","useState","useDispatch","Input","styled","increaseScore","useCurrentWordSelector","INPUT_VALUE_DEFAULT","GameInput","dispatch","currenWord","inputWord","setInputWord","clearInput","handleChange","value","isValueSameCurrentWord","event","target","GameInputWrapper","div"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AAEA,MAAMC,mBAAmB,GAAG,iBAA5B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,UAAU,GAAGJ,sBAAsB,EAAzC;AAEA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA4BX,QAAQ,EAA1C;;AAEA,QAAMY,UAAU,GAAG,MAAM;AACvBD,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAFD;;AAIA,QAAME,YAAY,GAAIC,KAAD,IAAW;AAC9BH,IAAAA,YAAY,CAACG,KAAD,CAAZ;AAEA,UAAMC,sBAAsB,GAAGN,UAAU,KAAKK,KAA9C;;AAEA,QAAI,CAACC,sBAAL,EAA6B;AAC3B;AACD;;AAEDH,IAAAA,UAAU;AACVJ,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACD,GAXD;;AAaA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,EAAE,EAAC,oBADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAEE,mBAHf;AAIE,IAAA,IAAI,EAAC,WAJP;AAKE,IAAA,SAAS,MALX;AAME,IAAA,OAAO,EAAC,UANV;AAOE,IAAA,QAAQ,EAAGU,KAAD,IAAWH,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaH,KAAd,CAPnC;AAQE,IAAA,KAAK,EAAEJ,SART;AASE,IAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAeD,CAtCD;;AAwCA,MAAMQ,gBAAgB,GAAGf,MAAM,CAACgB,GAAV;AAAA;AAAA;AAAA,+DAAtB;AAMA,eAAeZ,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Input } from '@material-ui/core'\nimport styled from 'styled-components'\n\nimport { increaseScore } from '../../redux/actions/gameActions'\nimport { useCurrentWordSelector } from '../../redux/reducers/game'\n\nconst INPUT_VALUE_DEFAULT = 'Start typing...'\n\nconst GameInput = () => {\n  const dispatch = useDispatch()\n  const currenWord = useCurrentWordSelector()\n\n  const [inputWord, setInputWord] = useState()\n\n  const clearInput = () => {\n    setInputWord('')\n  }\n\n  const handleChange = (value) => {\n    setInputWord(value)\n\n    const isValueSameCurrentWord = currenWord === value\n\n    if (!isValueSameCurrentWord) {\n      return\n    }\n\n    clearInput()\n    dispatch(increaseScore())\n  }\n\n  return (\n    <GameInputWrapper>\n      <Input\n        id=\"outlined-secondary\"\n        type=\"text\"\n        placeholder={INPUT_VALUE_DEFAULT}\n        name=\"wordInput\"\n        autoFocus\n        variant=\"outlined\"\n        onChange={(event) => handleChange(event.target.value)}\n        value={inputWord}\n        fullWidth\n      />\n    </GameInputWrapper>\n  )\n}\n\nconst GameInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport default GameInput\n"]},"metadata":{},"sourceType":"module"}