{"ast":null,"code":"var _jsxFileName = \"/app/components/GameInfo/GameInfo.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { useIsGameProgress } from '../../hooks/useIsGameInProgress';\nimport { useScoreSelector, useTimeSelector } from '../../redux/reducers/game';\nimport { decreaseTimeAction, setIsUserPlayingAction } from '../../redux/actions/gameActions';\nconst ONE_SECOND = 1000;\n\nconst GameInfo = () => {\n  const dispatch = useDispatch();\n  const score = useScoreSelector();\n  const time = useTimeSelector();\n  const isGameInProgress = useIsGameProgress();\n  const {\n    0: intervalId,\n    1: setIntervalId\n  } = useState(null);\n  const descreaseTimeInterval = setInterval(() => dispatch(decreaseTimeAction()), ONE_SECOND);\n  useEffect(() => {\n    console.log({\n      isGameInProgress\n    });\n\n    if (!isGameInProgress) {\n      console.log('stop()');\n      clearInterval(descreaseTime);\n      dispatch(setIsUserPlayingAction(false));\n      return;\n    }\n\n    descreaseTime();\n  }, [isGameInProgress]);\n  return __jsx(GameInfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Time Left: \", time)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Score: \", score)));\n};\n\nconst GameInfoWrapper = styled.div.withConfig({\n  displayName: \"GameInfo__GameInfoWrapper\",\n  componentId: \"sc-6ty09z-0\"\n})([\"display:flex;align-items:center;justify-content:space-between;\"]);\nexport default GameInfo;","map":{"version":3,"sources":["/app/components/GameInfo/GameInfo.js"],"names":["React","useEffect","useState","styled","useDispatch","useIsGameProgress","useScoreSelector","useTimeSelector","decreaseTimeAction","setIsUserPlayingAction","ONE_SECOND","GameInfo","dispatch","score","time","isGameInProgress","intervalId","setIntervalId","descreaseTimeInterval","setInterval","console","log","clearInterval","descreaseTime","GameInfoWrapper","div"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,2BAAlD;AACA,SACEC,kBADF,EAEEC,sBAFF,QAGO,iCAHP;AAKA,MAAMC,UAAU,GAAG,IAAnB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,KAAK,GAAGP,gBAAgB,EAA9B;AACA,QAAMQ,IAAI,GAAGP,eAAe,EAA5B;AACA,QAAMQ,gBAAgB,GAAGV,iBAAiB,EAA1C;AAEA,QAAM;AAAA,OAACW,UAAD;AAAA,OAAaC;AAAb,MAA8Bf,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAMgB,qBAAqB,GAAGC,WAAW,CACvC,MAAMP,QAAQ,CAACJ,kBAAkB,EAAnB,CADyB,EAEvCE,UAFuC,CAAzC;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEN,MAAAA;AAAF,KAAZ;;AACA,QAAI,CAACA,gBAAL,EAAuB;AACrBK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAC,MAAAA,aAAa,CAACC,aAAD,CAAb;AACAX,MAAAA,QAAQ,CAACH,sBAAsB,CAAC,KAAD,CAAvB,CAAR;AAEA;AACD;;AAEDc,IAAAA,aAAa;AACd,GAXQ,EAWN,CAACR,gBAAD,CAXM,CAAT;AAaA,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBD,IAAhB,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYD,KAAZ,CADF,CAJF,CADF;AAUD,CApCD;;AAsCA,MAAMW,eAAe,GAAGrB,MAAM,CAACsB,GAAV;AAAA;AAAA;AAAA,sEAArB;AAMA,eAAed,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\n\nimport { useIsGameProgress } from '../../hooks/useIsGameInProgress'\nimport { useScoreSelector, useTimeSelector } from '../../redux/reducers/game'\nimport {\n  decreaseTimeAction,\n  setIsUserPlayingAction,\n} from '../../redux/actions/gameActions'\n\nconst ONE_SECOND = 1000\n\nconst GameInfo = () => {\n  const dispatch = useDispatch()\n  const score = useScoreSelector()\n  const time = useTimeSelector()\n  const isGameInProgress = useIsGameProgress()\n\n  const [intervalId, setIntervalId] = useState(null)\n\n  const descreaseTimeInterval = setInterval(\n    () => dispatch(decreaseTimeAction()),\n    ONE_SECOND\n  )\n\n  useEffect(() => {\n    console.log({ isGameInProgress })\n    if (!isGameInProgress) {\n      console.log('stop()')\n      clearInterval(descreaseTime)\n      dispatch(setIsUserPlayingAction(false))\n\n      return\n    }\n\n    descreaseTime()\n  }, [isGameInProgress])\n\n  return (\n    <GameInfoWrapper>\n      <div>\n        <h3>Time Left: {time}</h3>\n      </div>\n      <div>\n        <h3>Score: {score}</h3>\n      </div>\n    </GameInfoWrapper>\n  )\n}\n\nconst GameInfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport default GameInfo\n"]},"metadata":{},"sourceType":"module"}