{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/app/components/GameWord/GameWord.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 1, 5rem;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: \", \";\\n  background-color: \", \";\\n  height: 3rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { getRandomWord } from '../../utils/WordGenerator';\nimport theme from '../../styles/theme';\nimport { setCurrentWord } from '../../redux/actions/gameActions';\nimport { useCurrentWordSelector, useScoreSelector } from '../../redux/reducers/game';\n\nvar GameWord = function GameWord() {\n  _s();\n\n  var dispatch = useDispatch();\n  var currentWord = useCurrentWordSelector();\n  var score = useScoreSelector();\n  useEffect(function () {\n    var currentWord = getRandomWord();\n    dispatch(setCurrentWord(currentWord));\n  }, [score]);\n  return __jsx(GameWordWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(WordTypography, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, currentWord));\n};\n\n_s(GameWord, \"2ZTBTGHhxYRxjOyDkPSrG7l28Tg=\", false, function () {\n  return [useDispatch, useCurrentWordSelector, useScoreSelector];\n});\n\n_c = GameWord;\nvar GameWordWrapper = styled.div(_templateObject(), theme.colors.white, theme.colors.primaryBlue);\n_c2 = GameWordWrapper;\nvar WordTypography = styled.span(_templateObject2());\n_c3 = WordTypography;\nexport default GameWord;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GameWord\");\n$RefreshReg$(_c2, \"GameWordWrapper\");\n$RefreshReg$(_c3, \"WordTypography\");","map":{"version":3,"sources":["/app/components/GameWord/GameWord.js"],"names":["React","useEffect","useDispatch","styled","getRandomWord","theme","setCurrentWord","useCurrentWordSelector","useScoreSelector","GameWord","dispatch","currentWord","score","GameWordWrapper","div","colors","white","primaryBlue","WordTypography","span"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,cAAT,QAA+B,iCAA/B;AAEA,SACEC,sBADF,EAEEC,gBAFF,QAGO,2BAHP;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,MAAMS,WAAW,GAAGJ,sBAAsB,EAA1C;AACA,MAAMK,KAAK,GAAGJ,gBAAgB,EAA9B;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,WAAW,GAAGP,aAAa,EAAjC;AAEAM,IAAAA,QAAQ,CAACJ,cAAc,CAACK,WAAD,CAAf,CAAR;AACD,GAJQ,EAIN,CAACC,KAAD,CAJM,CAAT;AAMA,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,WAAjB,CADF,CADF;AAKD,CAjBD;;GAAMF,Q;UACaP,W,EAEGK,sB,EACNC,gB;;;KAJVC,Q;AAmBN,IAAMI,eAAe,GAAGV,MAAM,CAACW,GAAV,oBAIVT,KAAK,CAACU,MAAN,CAAaC,KAJH,EAKCX,KAAK,CAACU,MAAN,CAAaE,WALd,CAArB;MAAMJ,e;AASN,IAAMK,cAAc,GAAGf,MAAM,CAACgB,IAAV,oBAApB;MAAMD,c;AAIN,eAAeT,QAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { getRandomWord } from '../../utils/WordGenerator'\nimport theme from '../../styles/theme'\n\nimport { setCurrentWord } from '../../redux/actions/gameActions'\n\nimport {\n  useCurrentWordSelector,\n  useScoreSelector,\n} from '../../redux/reducers/game'\n\nconst GameWord = () => {\n  const dispatch = useDispatch()\n\n  const currentWord = useCurrentWordSelector()\n  const score = useScoreSelector()\n\n  useEffect(() => {\n    const currentWord = getRandomWord()\n\n    dispatch(setCurrentWord(currentWord))\n  }, [score])\n\n  return (\n    <GameWordWrapper>\n      <WordTypography>{currentWord}</WordTypography>\n    </GameWordWrapper>\n  )\n}\n\nconst GameWordWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.white};\n  background-color: ${theme.colors.primaryBlue};\n  height: 3rem;\n`\n\nconst WordTypography = styled.span`\n  font-size: 1, 5rem;\n`\n\nexport default GameWord\n"]},"metadata":{},"sourceType":"module"}