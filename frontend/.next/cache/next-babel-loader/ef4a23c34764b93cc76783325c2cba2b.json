{"ast":null,"code":"import { useSelector } from 'react-redux';\nimport produce from 'immer';\nimport { GAME_ACTIONS_TYPES } from '../actions/gameActions';\nimport initialGameState from '../initialGameState';\nconst game = produce((state = initialGameState, {\n  type,\n  data\n}) => {\n  switch (type) {\n    case GAME_ACTIONS_TYPES.INCREASE_SCORE:\n      state.score += 1;\n      return state;\n\n    case GAME_ACTIONS_TYPES.SET_CURRENT_WORD:\n      state.currentWord = data;\n      return state;\n\n    default:\n      return state;\n  }\n});\nexport const useGameSelector = () => useSelector(store => store);\nexport const useScoreSelector = () => useSelector(store => store.score);\nexport const useCurrentWordSelector = () => useSelector(store => store.currentWord);\nexport default game;","map":{"version":3,"sources":["/app/redux/reducers/game.js"],"names":["useSelector","produce","GAME_ACTIONS_TYPES","initialGameState","game","state","type","data","INCREASE_SCORE","score","SET_CURRENT_WORD","currentWord","useGameSelector","store","useScoreSelector","useCurrentWordSelector"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,OAApB;AAEA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AAEA,MAAMC,IAAI,GAAGH,OAAO,CAAC,CAACI,KAAK,GAAGF,gBAAT,EAA2B;AAAEG,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA3B,KAA8C;AACjE,UAAQD,IAAR;AACE,SAAKJ,kBAAkB,CAACM,cAAxB;AACEH,MAAAA,KAAK,CAACI,KAAN,IAAe,CAAf;AACA,aAAOJ,KAAP;;AAEF,SAAKH,kBAAkB,CAACQ,gBAAxB;AACEL,MAAAA,KAAK,CAACM,WAAN,GAAoBJ,IAApB;AACA,aAAOF,KAAP;;AAEF;AACE,aAAOA,KAAP;AAVJ;AAYD,CAbmB,CAApB;AAeA,OAAO,MAAMO,eAAe,GAAG,MAAMZ,WAAW,CAAEa,KAAD,IAAWA,KAAZ,CAAzC;AAEP,OAAO,MAAMC,gBAAgB,GAAG,MAAMd,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACJ,KAAlB,CAA1C;AAEP,OAAO,MAAMM,sBAAsB,GAAG,MACpCf,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACF,WAAlB,CADN;AAGP,eAAeP,IAAf","sourcesContent":["import { useSelector } from 'react-redux'\nimport produce from 'immer'\n\nimport { GAME_ACTIONS_TYPES } from '../actions/gameActions'\nimport initialGameState from '../initialGameState'\n\nconst game = produce((state = initialGameState, { type, data }) => {\n  switch (type) {\n    case GAME_ACTIONS_TYPES.INCREASE_SCORE:\n      state.score += 1\n      return state\n\n    case GAME_ACTIONS_TYPES.SET_CURRENT_WORD:\n      state.currentWord = data\n      return state\n\n    default:\n      return state\n  }\n})\n\nexport const useGameSelector = () => useSelector((store) => store)\n\nexport const useScoreSelector = () => useSelector((store) => store.score)\n\nexport const useCurrentWordSelector = () =>\n  useSelector((store) => store.currentWord)\n\nexport default game\n"]},"metadata":{},"sourceType":"module"}