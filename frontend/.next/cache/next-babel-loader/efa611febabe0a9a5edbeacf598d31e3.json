{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/app/components/GameInput/GameInput.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TextField } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { useCurrentWordSelector } from '../../redux/reducers/game';\nimport { useIsGameProgress } from '../../hooks/useIsGameInProgress';\nimport { increaseScoreAction, setIsUserPlayingAction } from '../../redux/actions/gameActions';\nvar INPUT_VALUE_DEFAULT = 'Start typing...';\n\nvar GameInput = function GameInput() {\n  _s();\n\n  var dispatch = useDispatch();\n  var currenWord = useCurrentWordSelector();\n  var isGameInProgress = useIsGameProgress();\n\n  var _useState = useState(),\n      inputWord = _useState[0],\n      setInputWord = _useState[1];\n\n  var clearInput = function clearInput() {\n    setInputWord('');\n  };\n\n  var handleChange = function handleChange(value) {\n    setInputWord(value);\n    var isValueSameCurrentWord = currenWord === value;\n\n    if (!isValueSameCurrentWord) {\n      return;\n    }\n\n    clearInput();\n\n    if (!isGameInProgress) {\n      dispatch(setIsUserPlayingAction(true));\n      return;\n    }\n\n    dispatch(increaseScoreAction());\n  };\n\n  return __jsx(GameInputWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(TextField, {\n    autoFocus: true,\n    variant: \"outlined\",\n    placeholder: INPUT_VALUE_DEFAULT,\n    onChange: function onChange(event) {\n      return handleChange(event.target.value);\n    },\n    value: inputWord,\n    inputProps: {\n      min: 0,\n      style: {\n        textAlign: 'center' // color: theme.colors.primaryBlue,\n\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(GameInput, \"RtBmXzwlOXO9E8o1TzIh4ew7VXw=\", false, function () {\n  return [useDispatch, useCurrentWordSelector, useIsGameProgress];\n});\n\n_c = GameInput;\nvar GameInputWrapper = styled.div.withConfig({\n  displayName: \"GameInput__GameInputWrapper\",\n  componentId: \"ti0q1s-0\"\n})([\"display:flex;align-items:center;justify-content:center;margin-top:1rem;\"]);\n_c2 = GameInputWrapper;\nexport default GameInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GameInput\");\n$RefreshReg$(_c2, \"GameInputWrapper\");","map":{"version":3,"sources":["/app/components/GameInput/GameInput.js"],"names":["React","useState","useDispatch","TextField","styled","useCurrentWordSelector","useIsGameProgress","increaseScoreAction","setIsUserPlayingAction","INPUT_VALUE_DEFAULT","GameInput","dispatch","currenWord","isGameInProgress","inputWord","setInputWord","clearInput","handleChange","value","isValueSameCurrentWord","event","target","min","style","textAlign","GameInputWrapper","div"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AAEA,SACEC,mBADF,EAEEC,sBAFF,QAGO,iCAHP;AAKA,IAAMC,mBAAmB,GAAG,iBAA5B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,MAAMU,UAAU,GAAGP,sBAAsB,EAAzC;AACA,MAAMQ,gBAAgB,GAAGP,iBAAiB,EAA1C;;AAJsB,kBAMYL,QAAQ,EANpB;AAAA,MAMfa,SANe;AAAA,MAMJC,YANI;;AAQtB,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBD,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAFD;;AAIA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BH,IAAAA,YAAY,CAACG,KAAD,CAAZ;AAEA,QAAMC,sBAAsB,GAAGP,UAAU,KAAKM,KAA9C;;AAEA,QAAI,CAACC,sBAAL,EAA6B;AAC3B;AACD;;AAEDH,IAAAA,UAAU;;AAEV,QAAI,CAACH,gBAAL,EAAuB;AACrBF,MAAAA,QAAQ,CAACH,sBAAsB,CAAC,IAAD,CAAvB,CAAR;AACA;AACD;;AAEDG,IAAAA,QAAQ,CAACJ,mBAAmB,EAApB,CAAR;AACD,GAjBD;;AAmBA,SACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,WAAW,EAAEE,mBAHf;AAIE,IAAA,QAAQ,EAAE,kBAACW,KAAD;AAAA,aAAWH,YAAY,CAACG,KAAK,CAACC,MAAN,CAAaH,KAAd,CAAvB;AAAA,KAJZ;AAKE,IAAA,KAAK,EAAEJ,SALT;AAME,IAAA,UAAU,EAAE;AACVQ,MAAAA,GAAG,EAAE,CADK;AAEVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,QADN,CAEL;;AAFK;AAFG,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAmBD,CAlDD;;GAAMd,S;UACaR,W,EAEEG,sB,EACMC,iB;;;KAJrBI,S;AAoDN,IAAMe,gBAAgB,GAAGrB,MAAM,CAACsB,GAAV;AAAA;AAAA;AAAA,+EAAtB;MAAMD,gB;AAON,eAAef,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { TextField } from '@material-ui/core'\nimport styled from 'styled-components'\n\nimport { useCurrentWordSelector } from '../../redux/reducers/game'\nimport { useIsGameProgress } from '../../hooks/useIsGameInProgress'\n\nimport {\n  increaseScoreAction,\n  setIsUserPlayingAction,\n} from '../../redux/actions/gameActions'\n\nconst INPUT_VALUE_DEFAULT = 'Start typing...'\n\nconst GameInput = () => {\n  const dispatch = useDispatch()\n\n  const currenWord = useCurrentWordSelector()\n  const isGameInProgress = useIsGameProgress()\n\n  const [inputWord, setInputWord] = useState()\n\n  const clearInput = () => {\n    setInputWord('')\n  }\n\n  const handleChange = (value) => {\n    setInputWord(value)\n\n    const isValueSameCurrentWord = currenWord === value\n\n    if (!isValueSameCurrentWord) {\n      return\n    }\n\n    clearInput()\n\n    if (!isGameInProgress) {\n      dispatch(setIsUserPlayingAction(true))\n      return\n    }\n\n    dispatch(increaseScoreAction())\n  }\n\n  return (\n    <GameInputWrapper>\n      {/* TODO: Change color of input */}\n      <TextField\n        autoFocus\n        variant=\"outlined\"\n        placeholder={INPUT_VALUE_DEFAULT}\n        onChange={(event) => handleChange(event.target.value)}\n        value={inputWord}\n        inputProps={{\n          min: 0,\n          style: {\n            textAlign: 'center',\n            // color: theme.colors.primaryBlue,\n          },\n        }}\n      />\n    </GameInputWrapper>\n  )\n}\n\nconst GameInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 1rem;\n`\n\nexport default GameInput\n"]},"metadata":{},"sourceType":"module"}