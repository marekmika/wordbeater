webpackHotUpdate("static/development/pages/game.js",{

/***/ "./redux/actions/gameActions.js":
/*!**************************************!*\
  !*** ./redux/actions/gameActions.js ***!
  \**************************************/
/*! exports provided: GAME_ACTIONS_TYPES, increaseScore, setCurrentWord */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAME_ACTIONS_TYPES\", function() { return GAME_ACTIONS_TYPES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"increaseScore\", function() { return increaseScore; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setCurrentWord\", function() { return setCurrentWord; });\nvar GAME_ACTIONS_TYPES = {\n  INCREASE_SCORE: 'INCREASE_SCORE',\n  SET_CURRENT_WORD: 'SET_CURRENT_WORD',\n  RESET_TIME: 'RESET_TIME',\n  DECREASE_TIME: 'DECREASE_TIME'\n};\nvar increaseScore = function increaseScore() {\n  return {\n    type: GAME_ACTIONS_TYPES.INCREASE_SCORE\n  };\n};\nvar setCurrentWord = function setCurrentWord(word) {\n  return {\n    type: GAME_ACTIONS_TYPES.SET_CURRENT_WORD,\n    data: word\n  };\n};\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZWR1eC9hY3Rpb25zL2dhbWVBY3Rpb25zLmpzP2ExOTEiXSwibmFtZXMiOlsiR0FNRV9BQ1RJT05TX1RZUEVTIiwiSU5DUkVBU0VfU0NPUkUiLCJTRVRfQ1VSUkVOVF9XT1JEIiwiUkVTRVRfVElNRSIsIkRFQ1JFQVNFX1RJTUUiLCJpbmNyZWFzZVNjb3JlIiwidHlwZSIsInNldEN1cnJlbnRXb3JkIiwid29yZCIsImRhdGEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQU8sSUFBTUEsa0JBQWtCLEdBQUc7QUFDaENDLGdCQUFjLEVBQUUsZ0JBRGdCO0FBRWhDQyxrQkFBZ0IsRUFBRSxrQkFGYztBQUdoQ0MsWUFBVSxFQUFFLFlBSG9CO0FBSWhDQyxlQUFhLEVBQUU7QUFKaUIsQ0FBM0I7QUFPQSxJQUFNQyxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCO0FBQUEsU0FBTztBQUNsQ0MsUUFBSSxFQUFFTixrQkFBa0IsQ0FBQ0M7QUFEUyxHQUFQO0FBQUEsQ0FBdEI7QUFJQSxJQUFNTSxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLENBQUNDLElBQUQ7QUFBQSxTQUFXO0FBQ3ZDRixRQUFJLEVBQUVOLGtCQUFrQixDQUFDRSxnQkFEYztBQUV2Q08sUUFBSSxFQUFFRDtBQUZpQyxHQUFYO0FBQUEsQ0FBdkIiLCJmaWxlIjoiLi9yZWR1eC9hY3Rpb25zL2dhbWVBY3Rpb25zLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEdBTUVfQUNUSU9OU19UWVBFUyA9IHtcbiAgSU5DUkVBU0VfU0NPUkU6ICdJTkNSRUFTRV9TQ09SRScsXG4gIFNFVF9DVVJSRU5UX1dPUkQ6ICdTRVRfQ1VSUkVOVF9XT1JEJyxcbiAgUkVTRVRfVElNRTogJ1JFU0VUX1RJTUUnLFxuICBERUNSRUFTRV9USU1FOiAnREVDUkVBU0VfVElNRScsXG59XG5cbmV4cG9ydCBjb25zdCBpbmNyZWFzZVNjb3JlID0gKCkgPT4gKHtcbiAgdHlwZTogR0FNRV9BQ1RJT05TX1RZUEVTLklOQ1JFQVNFX1NDT1JFLFxufSlcblxuZXhwb3J0IGNvbnN0IHNldEN1cnJlbnRXb3JkID0gKHdvcmQpID0+ICh7XG4gIHR5cGU6IEdBTUVfQUNUSU9OU19UWVBFUy5TRVRfQ1VSUkVOVF9XT1JELFxuICBkYXRhOiB3b3JkLFxufSlcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./redux/actions/gameActions.js\n");

/***/ })

})